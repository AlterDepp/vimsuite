" ===========================================================================
"        File: changelog.vim
"      Author: Stefan Liebl (S.Liebl@gmx.de)
" Description: changelog for vimfiles in subversion
" Revision:    $LastChangedRevision$
" ===========================================================================

" get Revision from subversion
let g:VimFilesRevision = substitute("$Rev$",'\$Rev:\s*\(\d\+\)\s*\$','\1','g')
let &titlestring = '%t - (%-F) - %=vimfiles Rev: ' . g:VimFilesRevision

if exists('nochangelog')
    finish
endif

function s:ReportRev(Rev)
    if a:Rev >= '148'
    elseif a:Rev >= '145'
        echo 'Neu seit Rev: 145'
        echo 'BlockDiff: Markieren -> BlockDiff -> Markieren -> BlockDiff -> neuer Tab'
        echo 'Gsub: global substitute'
        echo 'gb funktioniert jetzt anders (= <c-o> bis zum letzten file)'
        echo 'syntax Highliting für Lint-Kommentare'
    elseif a:Rev >= '139'
        echo 'Neu seit Rev: 129'
        echo 'Projekt laden über project.vim'
        echo 'Einstellungen bleiben gespeichert'
        echo 'Session wird im Projekt gespeichert, wenn g:sessionfile von project.vim gesetzt wird'
    elseif a:Rev >= '129'
        echo 'Neu seit Rev: 129'
        echo 'Tags für BMS-X'
        echo 'Doxygen Toolkit'
        echo 'Update VimScripts'
        echo 'das Verzeichnis vimfiles kann ohne Anpassung verwendet werden'
    elseif a:Rev >= '128'
        echo 'Neu seit Rev: 128'
        echo 'Vimsuite für BMS-X verbessert'
    elseif a:Rev >= '123'
        echo 'Neu seit Rev: 120'
        echo 'Task Report'
        echo 'damos als eigenes Package'
        echo 'a2l indent verbessert'
        echo '+scons'
        echo '+Merge für Synergy/CM'
    elseif a:Rev >= '120'
        echo 'Neu seit Rev: 119'
        echo 'Verbindung zu Projekt deutlich beschleunigt, da mehrere Variablen auf einmal gelesen werden können'
        echo '+ftplugin paf.vim: Anzeiger der aktuellen Adresse in der Statuszeile'
        echo 'ccm.vim: Umformatierungen für ChangeSynergy Reports'
        echo 'BmskDoku im Menü und interaktiv'
        echo 'Cscope Verbindung kann per Menü geschlossen werden'
        echo 'Altes make.log kann per Menü geparsed werden'
    elseif a:Rev >= '119'
        echo 'Neu seit Rev: 118'
        echo 'Befehl "Bmsk distclean" im Menü ergänzt'
    elseif a:Rev >= '116'
        echo 'Neu seit Rev: 116'
        echo 'Einstelldialoge und Titelleiste für BMS-K verbessert'
        echo 'Menüs für BMS-K verbessert'
    elseif a:Rev >= '114'
        echo 'Neu seit Rev: 114'
        echo 'Continuus Anbindung verbessert'
        echo 'Bmsk Argumen EXTRA_C_FLAGS'
    elseif a:Rev >= '111'
        echo 'Neu seit Rev: 111'
        echo 'GetMakeVar verbessert, ccm64, +FindEEEmuFile'
    elseif a:Rev >= '111'
        echo 'Neu seit Rev: 100'
        echo 'Befehl BmskDoku zum besseren parsen von LaTeX Fehlern'
        echo 'Grep, GrepBmsk aktiviert'
        echo 'CCM kann jetzt auch Subprojekte'
        echo 'GetOsp... repariert'
        echo 'SVNstudio verbessert'
        echo 'SVNdiff auch mit Revision'
        echo 'diff für unix verbessert'
        echo 'MyTools heissen jetzt VimSuite'
        echo 'K46 ergänzt'
        echo 'Dokumentation überarbeitet'
    elseif a:Rev >= '100'
        echo 'Neu seit Rev: 90'
        echo 'vimfiles in Unterverzeichnisse'
    elseif a:Rev >= '90'
        echo 'Neu seit Rev: 89'
        echo 'compiler/bmsk.vim: leere Makeoptionen unterstützen, tex mit includieren'
        echo 'ftplugin/latex-suite: Update von vim.org'
        echo 'plugin/bmsk.vim: Makeoptionen erst leer lassen'
        echo 'plugin/basics.vim: PathNormpath verbessert'
        echo 'plugin/tools.vim: $VIMRUNTIME -> g:vimfiles'
        echo 'plugin/visincr.vim: Update von vim.org'
        echo 'after/syntax/python.vim: Update von vim.org'
    elseif a:Rev >= '89'
        echo 'Neu seit Rev: 79'
        echo 'after/syntax/kgs.vim: + test_wert_text'
        echo 'compiler/bmsk.vim   : Xlint weglassen wenn leer'
        echo 'doc/bmsk.txt        : kleine Aktualisierungen'
        echo 'tools/ctags.exe     : Version ohne cygwin'
        echo 'plugin/bmsk.vim     : header-Verzeichnisse verbessert'
        echo ' '
        echo 'checkpath sollte jetzt komplett funktionierien.'
        echo 'Siehe :help :checkpath'
    elseif a:Rev >= '79'
        echo 'Neu seit Rev: 78'
        echo 'angepasst auf make-12'
        echo 'ftplugins verbessert (setlocal)'
        echo 'Formatierung verbessert'
        echo 'Angepasst für vim 6.4'
        echo 'Python-dlls integriert'
    elseif a:Rev >= '78'
        echo 'Neu seit Rev: 76'
        echo 'Bmsk: UpdateBuffers verbessert'
        echo 'cscope: find files including this file geändert'
        echo '+ xml.vim'
        echo '+ indent/a2l.vim'
        echo 'compiler/bmsk.vim: alte Python-Meldung auskommentiert'
        echo 'svn.vim: SVNtool verbessert'
    elseif a:Rev >= '76'
        echo 'Neu seit Rev: 72'
        echo 'syntax-File für paf,daf,0pa,0da'
        echo 'Diff-Tools im Menü MyTools'
        echo 'Subversion-Menü'
        echo 'Subversion Command SVN'
        echo 'compiler/bmsk.vim unabhängig von Pfaden'
    elseif a:Rev >= '72'
        echo 'Neu seit Rev: 71'
        echo 'cscopeprg wird mit Pfad gesetzt'
        echo 'grep.exe V 2.5.1 in funktionierender Version'
        echo 'neue Suchpfade für linux'
        echo 'FindFile funktioniert wieder'
    elseif a:Rev >= '71'
        echo 'Neu seit Rev: 71'
        echo 'grep.exe V 2.5.1'
        echo 'basics.vim: Verbesserungen für GetOspTestValues'
        echo 'syntax/c.vim: c.vim aufgenommen (hatte ich bei Rev 67 vergessen)'
    elseif a:Rev >= '70'
        echo 'Neu seit Rev: 70'
        echo 'Make-Targets ergänzt'
        echo 'Produkte in Continuus auschecken'
    elseif a:Rev >= '66'
        echo 'Neu seit Rev: 66'
        echo 'ftplugin- und syntax-files nach after/...,'
        echo ' damit sie nach den files in vim63 geladen werden'
        echo 'syntax/c.vim: Verbessertes Syntax-Highliting'
        echo 'colors/Stefan.vim: Neue Syntax-Groups für neues c.vim'
        echo '-----------------------------------------------------'
        echo 'Ich empfehle die Änderungen aus colors/Stefan.vim'
        echo ' in das eigene Colorscheme zu übertragen'
    elseif a:Rev == '66'
        echo 'Neu in Rev: ' . g:VimFilesRevision
        echo 'doc/bmsk.vim: Doku aktualisiert'
        echo 'plugin/changelog.vim: neu, gibt die Änderungen beim ersten Start aus'
        echo 'plugin/tComment.vim: neu, gute Kommentierfunktion, :help tComment'
        echo 'plugin/visincr.vim: neu, inkrementieren von Spalten, :help visincr'
        echo 'plugin/matrix.vim: neu, Bildschirmschoner, :Matrix'
        echo 'ftplugin/python_fold.vim: neu, Faltungen für Python'
    endif
endfunction

" uncomment next line to get changelog for the last version
execute 'call s:ReportRev(' . g:VimFilesRevision . ')'

" comment changelog after first usage
silent! new <sfile>
silent! set modifiable
silent! %substitute/^execute 'call/"execute 'call/
silent! wq!
bdelete changelog.vim

